import { createConfigForNuxt } from '@nuxt/eslint-config/flat'

export default createConfigForNuxt({
  ignores: [`**/drizzle/*`],
  features: {
    tooling: true,
    formatters: true,
    stylistic: {
      arrayBracketNewline: `always`,
      arrayBracketSpacing: `always`,
      arrayElementNewline: `always`,
      arrowParens: `always`,
      arrowSpacing: { before: true, after: true },
      blockSpacing: `always`,
      braceStyle: `1tbs`,
      commaDangle: `never`,
      commaSpacing: true,
      commaStyle: `last`,
      computedPropertySpacing: `never`,
      curlyNewline: `always`,
      dotLocation: `object`,
      eolLast: `always`,
      functionCallArgumentNewline: `never`,
      functionCallSpacing: `never`,
      functionParenNewline: `never`,
      generatorStarSpacing: true,
      implicitArrowLinebreak: `beside`,
      indent: 2,
      indentBinaryOps: true,
      // JSX rules aren't listed
      keySpacing: { beforeColon: false, afterColon: true, mode: `minimum`, align: `value` },
      keywordSpacing: { before: true, after: true, overrides: { } },
      lineCommentPosition: `above`,
      linebreakStyle: `unix`,
      linesAroundComment: { beforeBlockComment: true, afterBlockComment: false, allowBlockStart: true, allowBlockEnd: true, allowClassStart: true, allowClassEnd: true, allowObjectStart: true, allowObjectEnd: true, allowArrayStart: true, allowArrayEnd: true },
      linesBetweenClassMembers: `always`,
      maxLen: 80,
      maxStatementsPerLine: { max: 1 },
      multilineCommentStyle: `starred-block`,
      multilineTernary: `never`,
      newParens: `always`,
      newlinePerChainedCall: true,
      noConfusingArrow: { allowParens: true },
      noExtraParens: { nestedBinaryExpressions: false },
      noExtraSemi: true,
      noFloatingDecimal: true,
      noMixedOperators: true,
      noMixedSpacesAndTabs: true,
      noMultiSpaces: true,
      noMultipleEmptyLines: true,
      noTabs: true,
      noTrailingSpaces: true,
      noWhitespaceBeforeProperty: true,
      nonblockStatementBodyPosition: `below`,
      objectCurlyNewline: `always`,
      objectCurlySpacing: `always`,
      objectPropertyNewline: true,
      oneVarDeclarationPerLine: `always`,
      operatorLinebreak: `none`,
      paddedBlocks: `never`,
      paddingLineBetweenStatements: true,
      quoteProps: `consistent-as-needed`,
      quotes: `backtick`,
      restSpreadSpacing: `never`,
      semi: false,
      semiSpacing: false,
      semiStyle: false,
      spaceBeforeBlocks: `always`,
      spaceBeforeFunctionParen: `never`,
      spaceInParens: `always`,
      spaceInfixOps: true,
      spaceUnaryOps: true,
      spacedComment: `always`,
      switchColonSpacing: true,
      templateCurlySpacing: `always`,
      templateTagSpacing: `always`,
      typeAnnotationSpacing: true,
      typeGenericSpacing: true,
      typeNamedTupleSpacing: true,
      wrapIIFE: true,
      wrapRegex: true,
      yieldStarSpacing: true
    }
  }
}).overrideRules({
  'no-process-env': [`error`],
  'vue/multi-word-component-names': `off`,
  'vue/max-attributes-per-line': [`error`, { singleline: { max: 3 }, multiline: { max: 1 } }],
  '@typescript-eslint/no-empty-object-type': `off`,
  '@stylistic/member-delimiter-style': [
    `error`,
    {
      multiline: {
        delimiter: `none`,
        requireLast: false
      },
      singleline: {
        delimiter: `comma`,
        requireLast: false
      }
    }]
})
